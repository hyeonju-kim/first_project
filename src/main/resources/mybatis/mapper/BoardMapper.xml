<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 게시판 -->
<mapper namespace="com.example.first.mapper.BoardMapper">

    <resultMap id="boardResultMap" type="com.example.first.dto.BoardDto">
        <id property="boardId" column="board_id"/>
        <result property="userId" column="user_id"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <!-- 게시글 목록 조회 쿼리 -->
    <select id="getAllBoards" resultType="com.example.first.dto.BoardDto" resultMap="boardResultMap">
        SELECT * FROM postgres.first_project.boards
        ORDER BY created_at DESC;
    </select>

    <!-- 특정 게시글 조회 쿼리 -->
    <select id="getBoardById" parameterType="java.lang.Long" resultType="com.example.first.dto.BoardDto" resultMap="boardResultMap">
        SELECT * FROM postgres.first_project.boards
        WHERE board_id = #{boardId};
    </select>

    <!-- 게시글 생성 쿼리 -->
    <select id="createBoard" parameterType="com.example.first.dto.BoardDto" resultType="java.lang.Long">
        INSERT INTO postgres.first_project.boards (title, content, status, created_at, user_id, username, nickname)
        VALUES (#{title}, #{content}, #{status}, #{createdAt}, #{userId}, #{username}, #{nickname})
        RETURNING board_id;
    </select>

    <!-- 게시글 수정 쿼리 -->
    <update id="updateBoard" parameterType="com.example.first.dto.BoardDto">
        UPDATE postgres.first_project.boards
        SET title = #{title}, content = #{content}, status = #{status}, created_at = #{createdAt}, user_id = #{userId}
        WHERE board_id = #{boardId};
    </update>

    <!-- 게시글 삭제 쿼리 -->
    <delete id="deleteBoard" parameterType="java.lang.Long">
        DELETE FROM postgres.first_project.boards WHERE board_id = #{boardId};
    </delete>

    <!-- 게시글 검색 쿼리 -->
    <select id="getSearchBoards" parameterType="java.lang.String" resultType="com.example.first.dto.BoardDto" resultMap="boardResultMap">
        SELECT *
        FROM postgres.first_project.boards
        WHERE
            (title LIKE CONCAT('%', #{keyword}, '%') OR content LIKE CONCAT('%', #{keyword}, '%'));
    </select>

</mapper>
