<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<!--회원가입-->
<mapper namespace="com.example.first.mapper.HomeMapper">
    <select id="signUp" parameterType="com.example.first.dto.UserDto" resultType="com.example.first.dto.UserDto">
        INSERT INTO postgres.first_project.users ( name, username, nickname, password, phone_number, profile_picture_location, zipcode, street_adr, detail_adr)
        VALUES ( #{name}, #{username}, #{nickname}, #{password},#{phoneNumber}, #{profilePictureLocation} , #{zipcode}, #{streetAdr}, #{detailAdr})
    </select>


<!--프로필 사진 업로드-->
    <select id="storeProfilePicture" parameterType="com.example.first.dto.ProfilePicture" >
        INSERT INTO postgres.first_project.profile_picture (file_name, save_path, reg_date, file_size, flag_del, file_ext)
        VALUES ( #{fileName}, #{savePath}, #{regDate}, #{fileSize}, #{flagDel}, #{fileExt})
    </select>

<!--인증 번호 저장-->
    <select id="setAuth" parameterType="com.example.first.dto.TempAuthInfo">
        INSERT INTO postgres.first_project.auth (username, auth_number, created_at)
        VALUES ( #{username}, #{authNumber}, #{createdAt})
    </select>

<!--    인증번호 가져오기-->
    <select id="findAuthNumberByUsername" parameterType="java.lang.String" resultType="com.example.first.dto.TempAuthInfo">
        SELECT * FROM postgres.first_project.auth
        WHERE username = #{username}
        ORDER BY created_at DESC -- created_at 열을 내림차순으로 정렬합니다.
        LIMIT 1 -- 결과를 하나만 가져오도록 제한합니다.
    </select>

<!--비밀번호 변경-->
    <select id="changePw" parameterType="com.example.first.dto.PasswordDto">
        UPDATE postgres.first_project.users
        SET password = #{newPassword}
        WHERE username = #{username}
    </select>


    <!--    사용자 메일로 사용자 가져오기-->
    <select id="findByUsername" parameterType="java.lang.String" resultType="com.example.first.dto.UserDto">
        SELECT * FROM postgres.first_project.users WHERE username = #{username}
    </select>


<!--    마이페이지 정보 가져오기-->
    <select id="getUserInfo" parameterType="java.lang.String" resultType="com.example.first.dto.UserDto">
        SELECT * FROM postgres.first_project.users WHERE username = #{username}
    </select>


    <!--    개인정보 확인-->
<!--    <select id="personalInfo"  resultType="com.example.first.dto.UserResponseDto">-->
<!--        <![CDATA[-->
<!--        SELECT sum(total_price) FROM sales total_price-->
<!--        WHERE store_id = #{store_id}-->
<!--          AND (ORDER_AT > LAST_DAY(NOW() - interval 1 month)-->
<!--            AND ORDER_AT <= LAST_DAY(NOW()))-->
<!--        ]]>-->
<!--    </select>-->

<!--    계정 중복확인-->
    <select id="isUsernameUnique" parameterType="java.lang.String" resultType="java.lang.Boolean">
    <![CDATA[
        SELECT COUNT(*) = 0
        FROM postgres.first_project.users
        WHERE username = #{username}
        ]]>
    </select>
</mapper>